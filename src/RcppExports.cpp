// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// applyDropoutMaskCpp
NumericMatrix applyDropoutMaskCpp(NumericMatrix data, NumericVector mask);
RcppExport SEXP darch_applyDropoutMaskCpp(SEXP dataSEXP, SEXP maskSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mask(maskSEXP);
    __result = Rcpp::wrap(applyDropoutMaskCpp(data, mask));
    return __result;
END_RCPP
}
// ditherCpp
void ditherCpp(NumericMatrix data);
RcppExport SEXP darch_ditherCpp(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    ditherCpp(data);
    return R_NilValue;
END_RCPP
}
// maxoutUnitDerivativeCpp
void maxoutUnitDerivativeCpp(NumericMatrix activations, NumericMatrix derivatives, int poolSize, NumericVector dropoutMask);
RcppExport SEXP darch_maxoutUnitDerivativeCpp(SEXP activationsSEXP, SEXP derivativesSEXP, SEXP poolSizeSEXP, SEXP dropoutMaskSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type activations(activationsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type derivatives(derivativesSEXP);
    Rcpp::traits::input_parameter< int >::type poolSize(poolSizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dropoutMask(dropoutMaskSEXP);
    maxoutUnitDerivativeCpp(activations, derivatives, poolSize, dropoutMask);
    return R_NilValue;
END_RCPP
}
// maxoutWeightUpdateCpp
void maxoutWeightUpdateCpp(NumericMatrix inc, int poolSize);
RcppExport SEXP darch_maxoutWeightUpdateCpp(SEXP incSEXP, SEXP poolSizeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type inc(incSEXP);
    Rcpp::traits::input_parameter< int >::type poolSize(poolSizeSEXP);
    maxoutWeightUpdateCpp(inc, poolSize);
    return R_NilValue;
END_RCPP
}
// normalizeWeightsCpp
void normalizeWeightsCpp(NumericMatrix weights, float bound);
RcppExport SEXP darch_normalizeWeightsCpp(SEXP weightsSEXP, SEXP boundSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< float >::type bound(boundSEXP);
    normalizeWeightsCpp(weights, bound);
    return R_NilValue;
END_RCPP
}
